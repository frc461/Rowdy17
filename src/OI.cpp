// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

//This MUST stay at the top to resolve an include issue with WPILib and OpenCV
#include "Commands/AlignWithGoal.h"

#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/AutonomousCommand.h"
#include "Commands/Drive.h"
#include "Commands/Flash.h"
#include "Commands/Fire.h"
#include "Commands/MoveIntake.h"
#include "Commands/MoveManipulator.h"
#include "Commands/SwitchGears.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES


OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    xboxController.reset(new Joystick(2));

    intakeDownButton.reset(new JoystickButton(xboxController.get(), 4));
    intakeUpButton.reset(new JoystickButton(xboxController.get(), 5));
    rightJoystick.reset(new Joystick(1));
    leftJoystick.reset(new Joystick(0));

//    secondGearButton.reset(new JoystickButton(rightJoystick.get(), 1));
//    secondGearButton->WhenPressed(new SwitchGears(false));
//    firstGearButton.reset(new JoystickButton(rightJoystick.get(), 2));
//    firstGearButton->WhenPressed(new SwitchGears(true));
    

    // SmartDashboard Buttons
//    SmartDashboard::PutData("SwitchGears: FirstGear", new SwitchGears(true));
    SmartDashboard::PutData("SwitchGears", new SwitchGears());
    SmartDashboard::PutData("MoveManipulator", new MoveManipulator(0));
    SmartDashboard::PutData("MoveIntake", new MoveIntake(0,0));
    SmartDashboard::PutData("Fire", new Fire());
    SmartDashboard::PutData("Drive", new Drive(0,0));
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    SmartDashboard::PutData("Flashlight", new Flash());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

    alignButton.reset(new JoystickButton(leftJoystick.get(), 5));
    alignButton->WhileHeld(new AlignWithGoal());
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getLeftJoystick() {
   return leftJoystick;
}

std::shared_ptr<Joystick> OI::getRightJoystick() {
   return rightJoystick;
}

std::shared_ptr<Joystick> OI::getXboxController() {
   return xboxController;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
