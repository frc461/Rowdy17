// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "RobotMap.h"
#include "LiveWindow/LiveWindow.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftDrive1;
std::shared_ptr<SpeedController> RobotMap::driveTrainLeftDrive2;
std::shared_ptr<SpeedController> RobotMap::driveTrainRightDrive1;
std::shared_ptr<SpeedController> RobotMap::driveTrainRightDrive2;
std::shared_ptr<RobotDrive> RobotMap::driveTrainRobotDrive41;
std::shared_ptr<SpeedController> RobotMap::intakeAndManipulatorIntakeRoller;
std::shared_ptr<SpeedController> RobotMap::intakeAndManipulatorManipulator;
std::shared_ptr<SpeedController> RobotMap::grapplingHookClimber;
std::shared_ptr<SpeedController> RobotMap::grapplingHookWinch;
std::shared_ptr<Solenoid> RobotMap::catapultPneumaticsCatapult1;
std::shared_ptr<Solenoid> RobotMap::catapultPneumaticsCatapult2;
std::shared_ptr<Solenoid> RobotMap::catapultPneumaticsCatapult3;
std::shared_ptr<Solenoid> RobotMap::catapultPneumaticsCatapult4;
std::shared_ptr<DoubleSolenoid> RobotMap::transmissionShifter;
std::shared_ptr<DoubleSolenoid> RobotMap::intakePositionersIntakeRaiseLower;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=ALLOCATION

void RobotMap::init() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    LiveWindow *lw = LiveWindow::GetInstance();

    driveTrainLeftDrive1.reset(new Victor(0));
    lw->AddActuator("DriveTrain", "LeftDrive1", (Victor&) driveTrainLeftDrive1);
    
    driveTrainLeftDrive2.reset(new Victor(1));
    lw->AddActuator("DriveTrain", "LeftDrive2", (Victor&) driveTrainLeftDrive2);
    
    driveTrainRightDrive1.reset(new Victor(2));
    lw->AddActuator("DriveTrain", "RightDrive1", (Victor&) driveTrainRightDrive1);
    
    driveTrainRightDrive2.reset(new Victor(3));
    lw->AddActuator("DriveTrain", "RightDrive2", (Victor&) driveTrainRightDrive2);
    
    driveTrainRobotDrive41.reset(new RobotDrive(driveTrainLeftDrive1, driveTrainLeftDrive2,
              driveTrainRightDrive1, driveTrainRightDrive2));
    
    driveTrainRobotDrive41->SetSafetyEnabled(true);
        driveTrainRobotDrive41->SetExpiration(0.1);
        driveTrainRobotDrive41->SetSensitivity(0.5);
        driveTrainRobotDrive41->SetMaxOutput(1.0);

    intakeAndManipulatorIntakeRoller.reset(new Spark(4));
    lw->AddActuator("IntakeAndManipulator", "IntakeRoller", (Spark&) intakeAndManipulatorIntakeRoller);
    
    intakeAndManipulatorManipulator.reset(new Spark(5));
    lw->AddActuator("IntakeAndManipulator", "Manipulator", (Spark&) intakeAndManipulatorManipulator);
    
    grapplingHookClimber.reset(new Spark(6));
    lw->AddActuator("GrapplingHook", "Climber", (Spark&) grapplingHookClimber);
    
    grapplingHookWinch.reset(new Spark(7));
    lw->AddActuator("GrapplingHook", "Winch", (Spark&) grapplingHookWinch);
    
    catapultPneumaticsCatapult1.reset(new Solenoid(0, 0));
    lw->AddActuator("CatapultPneumatics", "Catapult1", catapultPneumaticsCatapult1);
    
    catapultPneumaticsCatapult2.reset(new Solenoid(0, 1));
    lw->AddActuator("CatapultPneumatics", "Catapult2", catapultPneumaticsCatapult2);
    
    catapultPneumaticsCatapult3.reset(new Solenoid(0, 2));
    lw->AddActuator("CatapultPneumatics", "Catapult3", catapultPneumaticsCatapult3);
    
    catapultPneumaticsCatapult4.reset(new Solenoid(0, 3));
    lw->AddActuator("CatapultPneumatics", "Catapult4", catapultPneumaticsCatapult4);
    
    transmissionShifter.reset(new DoubleSolenoid(0, 4, 5));
    lw->AddActuator("Transmission", "Shifter", transmissionShifter);
    
    intakePositionersIntakeRaiseLower.reset(new DoubleSolenoid(0, 6, 7));
    lw->AddActuator("IntakePositioners", "IntakeRaiseLower", intakePositionersIntakeRaiseLower);
    


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}
